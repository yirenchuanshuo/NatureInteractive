#include "/Engine/Private/Common.ush"
Texture2D FluidInput;
RWTexture2D<float4> FluidOutput;
float2 Offset;

SamplerState FluidInputSampler;


[numthreads(SIZE_X,SIZE_Y,SIZE_Z)]
void FluidOffsetCS(uint3 ThreadId : SV_DispatchThreadID)
{
	float2 pos = ThreadId.xy;
	
	int2 FinalPos = pos + Offset;
	int2 MaxSize;
	FluidInput.GetDimensions(MaxSize.x, MaxSize.y);

	float2 UV = ThreadId.xy / float2(MaxSize);
	float ShadingRange = select(any(UV>0.99) || any(UV<0.01),0,1);

	FluidOutput[ThreadId.xy] = FluidInput[FinalPos] * ShadingRange;
}


void FluidOffsetVS(  
	in float4 InPosition : ATTRIBUTE0,  
	in float2 InUV : ATTRIBUTE1,  
	out float2 OutUV : TEXCOORD0,  
	out float4 OutPosition : SV_POSITION  
	)  
{  
	OutPosition = InPosition;  
	OutUV = InUV;  
}

void FluidOffsetPS(  
	in float2 UV : TEXCOORD0,  
	out float4 OutColor : SV_Target0  
	)
{
	float2 OffsetUV = UV+Offset;
	float ShadingRange = select(any(OffsetUV>0.99) || any(OffsetUV<0.01),0,1);
	
	OutColor = Texture2DSample(FluidInput,FluidInputSampler,OffsetUV) * ShadingRange;
}